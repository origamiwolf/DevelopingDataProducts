128*2
256*2
512*2
phone <- data.frame("year","mb")
View(phone)
rm(phone)
year <- c(2008,2010,2012,2014)
mem <- c(128, 128*2, 128*2*2, 128*2*2*2)
plot(year, mem)
460/23
traftype <- c("Tweet","Instagram","Skype","Google Search","Youtube","Emails")
trafsize <- c(9572,2324,1801,49599,103826,2408870)
traffic <- data.frame(traftype,trafsize)
View(traffic)
plot(traftype)
plot(traffic)
Emails
traffic(Emails)
traffic[Emails]
traffic[traftype="Emails"]
traffic[1]
traffic[1,1
]
traffic[6,1]
2408870/100
=128*128
128*128
2408870/128
2408870/12800
2408870/13000
2408870/26000
2408870/26000
2408870/100
24088/130
103826/120
103826/12000
103826/10000
103826/100
1038.26/100
1038.26/80
1038.26/50
1038.26/40
1038.26/36
1038.26/38
1038.26/32
49599/100
495/50
495/25
495/22
18/10
18/4
2324/100
23.24/4
23.24/5
9572/100
95/10
2408870/2
1204435/185
65*37.5
22.5/56.1
32*32
?sin()
plot(y~sin(x))
y <- sin(x)
plot(y)
plot(sin)
?plot
plot(sin,-2*pi, 2*pi)
clear
plot(cos,-2*pi,2*pi)
plot(tan,-2*pi,2*pi)
library(datasets)
?datasets
library(help="datasets")
?CO2
CO2
pairs(CO@)
pairs(CO2)
?Orange
pairs(Orange)
?Titanic
pairs(Titanic)
?UCBAdmissions
?WWWusage
?warpbreaks
pairs(warpbreaks)
?rock
?mtcars
?morley
plot(run, dataset=morley)
plot(Run,dataset=morley)
plot(morley$run)
plot(morley$run,morley$Speed)
pairs(morley)
?islands
?esoph
?chickwts
?cars
plot(cars$speed,cars$dis)
plot(cars$speed,cars$dist)
WWWusage
?Orange
?HairEyeColor
?AirPassengers
?BOD
?InsectSprays
?UCBAdmissions
?UKDriverDeaths
?ability.cov
?austres
?beavers
beaver1
beaver1
pairs(beaver1)
?sleep
?treering
?uspop
?mtcars
?rivers
rivers
?precip
pairs(mtcars)
pairs(mpg~. data=mtcar)
pairs(mpg~. data=mtcars)
pairs(mpg~., data=mtcars)
exit
quit
plot(sin,0,2*pi)
plot(sin,0,4*pi)
plot(x*sin,0,4*pi)
plot(cos*sin,0,4*pi)
plot(exp,0,1)
plot(exp,0,100)
plot(rdist,0,100)
?rnorm
plot(rnorm(100))
plot(dnorm(100))
?rnorm
plot(pnorm)
plot(pnorm(2))
plot(pnorm)
?pnorm
?rnorm
hist(rnorm(100))
hist(rnorm(1000))
hist(rnorm(100000))
?plot
methods(lpot)
methods(plot)
?plot.formula
plot.formula(y ~ sin(x),0,2*pi)
plot(y ~ sin(x),0,2*pi)
plot(sin, 0,2*pi)
plot(cos, 0,2*pi)
plot(tan, 0,20*pi)
?mtcars
mtcars
pairs(mtcars)
exit()
quit()
download.packages("caret")
install.packages("caret")
q()
install.packages("e1074")
library("caret")
library(kernlab)
library("kernlab")
install.packages("kernlab")
library("kernlab")
data(spam)
summary(spam)
install.packages("installr")
updateR
library(installr)
updateR
updateR()
q()
install.packages(c("lme4", "manipulate", "mime", "R6", "randomForest", "Rcpp", "RcppEigen", "rmarkdown", "scales", "stringi"))
install.packages("devTools")
install.packages("devtools")
install.packages("tidyr")
install.packages("shiny")
install.packages("slidify")
install.packages("rCharts")
install_github("slidify", "ramnathv")
library(devtools)
install.packages("Rtools")
install.packages("rtools")
install_github("slidify", "ramnathv")
install_github("rcharts", "ramnathv")
install_github("slidifyLibraries", "ramnathv")
install.packages("googleVis")
install.packages("shinyapps")
install_github("rstudio/shinyapps")
q()
paste("modelCheck(var\"",'i',"_d.bug\")",sep="")
paste("modelCheck(var\"",'i','_d.bug\')",sep="")
)
''
()
""
paste("modelCheck(var\"",'i',"_d.bug\")",sep="")
paste(var\"", 'i', "_d.bug\"")
paste(var\"", 'i', "_d.bug\""")
paste(var\", 'i', "_d.bug\""")
paste('var\"','i')
paste('var\\"','i')
paste('var\"','i')
?paste
print(paste("modelCheck(var\"",'i',"_d.bug\")",sep=""))
cat(paste("modelCheck(var\"",'i',"_d.bug\")",sep=""))
?cat
shiny::runApp('dataScience9/DevelopingDataProducts/cepheidApp')
shiny::runApp('dataScience9/DevelopingDataProducts/cepheidApp')
shiny::runApp('dataScience9/DevelopingDataProducts/cepheidApp')
shiny::runApp('dataScience9/DevelopingDataProducts/cepheidApp')
shiny::runApp('dataScience9/DevelopingDataProducts/cepheidApp')
shiny::runApp('dataScience9/DevelopingDataProducts/cepheidApp')
shiny::runApp('dataScience9/DevelopingDataProducts/cepheidApp')
shiny::runApp('dataScience9/DevelopingDataProducts/cepheidApp')
shiny::runApp('dataScience9/DevelopingDataProducts/cepheidApp')
shiny::runApp('dataScience9/DevelopingDataProducts/cepheidApp')
shiny::runApp('dataScience9/DevelopingDataProducts/cepheidApp')
shiny::runApp('dataScience9/DevelopingDataProducts/cepheidApp')
?outputTe
?fluidrow
?text
shiny::runApp('dataScience9/DevelopingDataProducts/cepheidApp')
shiny::runApp('dataScience9/DevelopingDataProducts/cepheidApp')
shiny::runApp('dataScience9/DevelopingDataProducts/cepheidApp')
shiny::runApp('dataScience9/DevelopingDataProducts/cepheidApp')
shiny::runApp('dataScience9/DevelopingDataProducts/cepheidApp')
shiny::runApp('dataScience9/DevelopingDataProducts/cepheidApp')
shiny::runApp('dataScience9/DevelopingDataProducts/cepheidApp')
shiny::runApp('dataScience9/DevelopingDataProducts/cepheidApp')
shiny::runApp('dataScience9/DevelopingDataProducts/cepheidApp')
shiny::runApp('dataScience9/DevelopingDataProducts/cepheidApp')
shiny::runApp('dataScience9/DevelopingDataProducts/cepheidApp')
devtools::install_github('rstudio/shinyapps')
install_github('rstudio/shinyapps')
library(devtools)
install_github('rstudio/shinyapps')
shinyapps::setAccountInfo(name='origamiwolf', token='A482BC46383FE667B02EFAD6057D4426', secret='QdptR9WKXKjf2z6IesHoVCSsI4lLa32tLqdsfuXN')
library(shinyapps)
getwd()
shinyapps::deploy("dataScience9/DevelopingDataProducts//cepheidApp")
shinyapps::deployApp("dataScience9/DevelopingDataProducts//cepheidApp")
getwd()
setwd("dataScience9/")
dir.create("presentation")
setwd("presentation/")
author("cepheid_deck")
library(slidify)
author("cepheid_deck")
shiny::runApp('~/R/work/dataScience9/DevelopingDataProducts/cepheidApp')
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
getwd()
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
q()
