1+1
library(mtcars)
load(mtcars)
mtcars
plot(mtcars$wt,mtcars$mpg)
exit
q()
getwd()
?read
?read()
?file.read
?read.file
?read.csv
table1 <- read.table("monster.txt, header=T")
table1<-read.table("monster.txt",header=T)
table1<-read.table("monster.txt")
table1<-read.table("monster.txt", sep=" ")
read.delim("monster.txt")
table1<-read.delim("monster.txt")
table1
?read.delim
aaaaaaaaaaaaaaaaaaaaaaaaaa
exit
q()
read.delim("monster.txt",sep="")
read.delim("monster.txt")
table1 <- read.delim2("monster.txt")
table1
table1[1,]
table1[,1
]
read.table("monster.txt",sep="\t")
read.table("monster.txt",header=T,sep="\t")
read.table("monster.txt",header=F,sep="\t",skip=2)
table1<-read.table("monster.txt",header=F,sep="\t",skip=2)
View(table1)
table1<-read.table("monster.txt",header=F,sep=" ",skip=2)
table1<-read.table("monster.txt",header=F,sep="\t",skip=2)
install.packages("shiny")
table1<-read.fwf("monster.txt")
?read.fwf
head(table1)
widths <- c(4,20,5,5,7,7,7,7,7,7)
table1<-read.fwf("monster.txt",widths)
table1<-read.fwf("monster.txt",widths,skip-2)
table1<-read.fwf("monster.txt",widths,skip=2)
widths[4]
widths[4]=7
table1<-read.fwf("monster.txt",widths,skip=2)
widths[6]=8
table1<-read.fwf("monster.txt",widths,skip=2)
table1<-read.fwf("monster.txt",widths,header=t)
table1<-read.fwf("monster.txt",widths)
table1<-read.fwf("monster.txt",widths,skip=2)
mnames<-c("Number","Name","Str","Brain","Quick","Energy","Exper","Treas","Type","Flock")
names(table1)<-mnames
?write.table
write.csv(table1,"phantasia-monsters.csv")
?subset
subset(table1,select = c("Name","Energy"))
table2<-subset(table1,select = c("Name","Energy"))
View(table2)
boltnum<-table2$Energy/10
boltnum
boltnum<-round(table2$Energy/10)
boltnum
table2$bolts<-boltnum
names(table2)[3]
names(table2)[3]<-"Bolts"
?write.fwf
?read.fwf
?write.table
size5<-table2$Bolts*5
table2$Size5<-size5
write.table(table2,"phantasia-mbolts.txt",sep="\t")
write.table(table2,"phantasia-mbolts.txt",sep="\t",quote=f)
write.table(table2,"phantasia-mbolts.txt",sep="\t",quote=F)
install.packages("knitr")
q()
install.packages("devtools")
install.packages("httr")
install.packages("curl")
q()
setwd("R")
dir.create("dataScience9")
setwd("dataScience9/")
library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
dir.create("quizApp")
setwd("quizApp/")
library(shiny)
install.packages("UsingR")
shiny::runApp()
?sliderInput
shiny::runApp()
shiny::runApp()
shiny::runApp()
setwd("..")
setwd("..")
pwd
getwd()
setwd("../shinyTutorial/")
dir.create("census-app")
setwd("census-app/")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
fileURL <-http://shiny.rstudio.com/tutorial/lesson5/census-app/data/counties.rds
fileURL <- "http://shiny.rstudio.com/tutorial/lesson5/census-app/data/counties.rds"
getwd()
dir.create("data")
setwd("data")
download.file(fileURL,destfile="counties.rds")
setwd("..")
counties <- readRDS("data/counties.rds")
head(counties)
rm(galton)
rm(fileURL)
rm(myPlot)
fileURL <- "http://shiny.rstudio.com/tutorial/lesson5/census-app/helpers.R"
getwd()
download.file(fileURL,destfile="helpers.R")
install.packages(c("maps", "mapproj"))
shiny::runApp()
rm(list=ls())
getwd()
setwd(..)
setwd("..")
setwd("..")
getwd()
monsters<-read.table("phantasia-mbolts.txt")
table1<-read.csv("phantasia-monsters.csv")
View(table1)
?subset
table2<-subset(table1,select=c(Name,Energy))
head(table2)
numBolts<-table2$Energy/2
numBolts<-round(table2$Energy/2
)
table2$Bolts <- numBolts
table2
View(table2)
save.csv(table2,destfile="phantasia-mbolts.csv")
write.csv(table2,destfile="phantasia-mbolts.csv")
write.csv(table2,"phantasia-mbolts.csv")
levels(table2$Bolts)
levels(as.factor(table2$Bolts))
levels(as.factor(table2$Bolts))
write.csv(table2,"phantasia-mbolts.csv")
table2[1,]
table2[1,table2$Bolts==12]
table2[1,table2$Bolts=12]
table2[1,table2$Bolts="12"]
table2[1,table2$Bolts=="12"]
table2[table2$Bolts=="12",]
table2[table2$Bolts==12,]
table2[table2$Bolts==12,table2$Name]
table2$Name[table2$Bolts==12]
table2$Name[table2$Bolts==12,]
table2$Name[table2$Bolts==12]
class(table2$Name[table2$Bolts==12])
as.character(table2$Name[table2$Bolts==12])
tmp <- table2$Name[table2$Bolts==12]
tmp
tmp <- as.character(table2$Name[table2$Bolts==12])
tmp
?as.character
aggregate(table2, by=Bolts)
aggregate(table2, by=Bolts, FUN=mean)
aggregate(table2, by=table2$Bolts, FUN=mean)
aggregate(table2, by=list(table2$Bolts), FUN=mean)
aggregate(table2, by=list(table2$Bolts), FUN=value)
?aggregate
summary(table2)
attach(mtcars)
aggdata <-aggregate(mtcars, by=list(cyl,vs),
FUN=mean, na.rm=TRUE)
print(aggdata)
detach(mtcars)
tmp <- trimws(as.character(table2$Name[table2$Bolts==12]))
ver
trim <- function( x ) {
gsub("(^[[:space:]]+|[[:space:]]+$)", "", x)
}
tmp <- trim(as.character(table2$Name[table2$Bolts==12]))
tmp
class(tmp)
paste(tmp,sep=",",collapse=T)
paste(tmp,sep=",",collapse="")
paste(tmp,sep=",",collapse=",")
table3 <- data.frame("Bolts","Monsters")
View(table3)
?data.frame
?vector
boltNum <- vector("numeric")
monGroup <- vector("character")
for (i in levels(as.factor(table2$Bolts))) {
tmp <- trim(as.character(table2$Name[table2$Bolts==i]))
boltNum <- c(i, boltNum)
monGroup <- c(monGroup, paste(tmp,sep=",",collapse=","))
}
table3 <- data.frame(boltNum,monGroup)
View(table3)
rm(boltNum)
rm(monGroup)
rm(table3)
boltNum <- vector("numeric")
monGroup <- vector("character")
for (i in levels(as.factor(table2$Bolts))) {
tmp <- trim(as.character(table2$Name[table2$Bolts==i]))
boltNum <- c(as.numeric(i), boltNum)
monGroup <- c(monGroup, paste(tmp,sep=",",collapse=","))
}
table3 <- data.frame(boltNum,monGroup)
View(table3)
as.numeric(i)
boltNum <- vector("numeric")
monGroup <- vector("character")
for (i in levels(as.factor(table2$Bolts))) {
tmp <- trim(as.character(table2$Name[table2$Bolts==i]))
boltNum <- c(boltNum, i)
monGroup <- c(monGroup, paste(tmp,sep=",",collapse=","))
}
table3 <- data.frame(boltNum,monGroup)
View(table3)
?writefwf
write.table(table3,destfile="phantasia-mbolt2",sep="\t")
write.table(table3,"phantasia-mbolt2.txt",sep="\t")
>write.table
?write.table
write.table(table3,"phantasia-mbolt2.txt",quote=F,sep="\t",row.names=F)
q()
?df
?du
?system
system("df -h")
install.packages("ggplot2")
install.packages("reshape2")
q()
shiny::runApp('R/dataScience9/project/cepheidApp')
shiny::runApp('R/dataScience9/project/cepheidApp')
shiny::runApp('R/dataScience9/project/cepheidApp')
?radioButtons
?checkboxGroupInput
?checkboxInput
shiny::runApp('R/dataScience9/project/cepheidApp')
shiny::runApp('R/dataScience9/project/cepheidApp')
?stat_smooth
shiny::runApp('R/dataScience9/project/cepheidApp')
shiny::runApp('R/dataScience9/project/cepheidApp')
?aes_string
shiny::runApp('R/dataScience9/project/cepheidApp')
shiny::runApp('R/dataScience9/project/cepheidApp')
shiny::runApp('R/dataScience9/project/cepheidApp')
shiny::runApp('R/dataScience9/project/cepheidApp')
shiny::runApp('R/dataScience9/project/cepheidApp')
shiny::runApp('R/dataScience9/project/cepheidApp')
shiny::runApp('R/dataScience9/project/cepheidApp')
shiny::runApp('R/dataScience9/project/cepheidApp')
shiny::runApp('R/dataScience9/project/cepheidApp')
shiny::runApp('R/dataScience9/project/cepheidApp')
shiny::runApp('R/dataScience9/project/cepheidApp')
shiny::runApp('R/dataScience9/project/cepheidApp')
shiny::runApp('R/dataScience9/project/cepheidApp')
shiny::runApp('R/dataScience9/project/cepheidApp')
?nearPoints
shiny::runApp('R/dataScience9/project/cepheidApp')
shiny::runApp('R/dataScience9/project/cepheidApp')
?textOutput
shiny::runApp('R/dataScience9/project/cepheidApp')
shiny::runApp('R/dataScience9/project/cepheidApp')
shiny::runApp('R/dataScience9/project/cepheidApp')
shiny::runApp('R/dataScience9/project/cepheidApp')
shiny::runApp('R/dataScience9/project/cepheidApp')
?str
?print
shiny::runApp('R/dataScience9/project/cepheidApp')
textOut
?cat
shiny::runApp('R/dataScience9/project/cepheidApp')
?annotate
shiny::runApp('R/dataScience9/project/cepheidApp')
shiny::runApp('R/dataScience9/project/cepheidApp')
shiny::runApp('R/dataScience9/project/cepheidApp')
?nearPoints
shiny::runApp('R/dataScience9/project/cepheidApp')
shiny::runApp('R/dataScience9/project/cepheidApp')
shiny::runApp('R/dataScience9/project/cepheidApp')
shiny::runApp('R/dataScience9/project/cepheidApp')
shiny::runApp('R/dataScience9/project/cepheidApp')
shiny::runApp('R/dataScience9/project/cepheidApp')
shiny::runApp('R/dataScience9/project/cepheidApp')
shiny::runApp('R/dataScience9/project/cepheidApp')
rawCeph <- read.csv("cepheids.csv")
cleanCeph <- gather(rawCeph,magVal,appMag,Min:Max)
setwd("R/dataScience9/project/cepheidApp/")
rawCeph <- read.csv("cepheids.csv")
cleanCeph <- gather(rawCeph,magVal,appMag,Min:Max)
processCephData(cleanCeph,200)
cephData<-processCephData(cleanCeph,200)
View(cephData)
cephData[cephData$H==1492]
cephData[cephData$H==1492,]
cephData[cephData$H==1492 && cehData$magVal==Min,]
cephData[cephData$H==1492 && cehData$magVal==Min]
cephData[cephData$H==1492 && cehData$magVal=="Min"]
cephData[cephData$H==1492 && cehData$magVal=="Min",]
cephData[cephData$H==1492 && cephData$magVal==Min]
cephData[cephData$H==1492 && cephData$magVal=="Min"]
cephData[cephData$H==1492 && cephData$magVal=="Min",]
cephData[cephData$H==1492]
cephData[cephData$H==1492,]
cephData[cephData$H==1492 && cephData$magVal=="Min",]
cephData[cephData$H==1492 && cephData$magVal!="Min",]
cephData[cephData$H==1492 && cephData$magVal==Max,]
cephData[cephData$H==1492 && cephData$magVal=="Max",]
cephData[cephData$H==1492 && cephData$appMag > 14,]
cephData[(cephData$H==1492 && cephData$appMag > 14),]
cephData[cephData$H==1492 & cephData$magVal==Max,]
cephData[cephData$H==1492 & cephData$magVal=="Max",]
cephData[cephData$H==1492,]
cephData[cephData$H==1492,1]
cephData[cephData$H==1492,]
cephData[cephData$H==1492,][1]
cephData[cephData$H==1492,][,1]
cephData[cephData$H==1492,][1,]
cephData[cephData$H==1492,][1,1]
cephData[cephData$H==1492,][1,3]
getStarData <- function(cephData, H) {
starData <- c(cephData[cephData$H == H,][1,1],
cephData[cephData$H == H,][1,3],
cephData[cephData$H == H & cephData$magVal=="Min",][1,5],
cephData[cephData$H == H & cephData$magVal=="Min",][1,6],
cephData[cephData$H == H & cephData$magVal=="Max",][1,5],
cephData[cephData$H == H & cephData$magVal=="Max",][1,6]
)
}
getStarData(cephData,1492)
getStarData <- function(cephData, H) {
starData <- c(cephData[cephData$H == H,][1,1],
cephData[cephData$H == H,][1,3],
cephData[cephData$H == H & cephData$magVal=="Min",][1,5],
cephData[cephData$H == H & cephData$magVal=="Min",][1,6],
cephData[cephData$H == H & cephData$magVal=="Max",][1,5],
cephData[cephData$H == H & cephData$magVal=="Max",][1,6]
)
return (starData)
}
getStarData(cephData,1492)
getStarData <- function(cephData, H) {
starData <- list(cephData[cephData$H == H,][1,1],
cephData[cephData$H == H,][1,3],
cephData[cephData$H == H & cephData$magVal=="Min",][1,5],
cephData[cephData$H == H & cephData$magVal=="Min",][1,6],
cephData[cephData$H == H & cephData$magVal=="Max",][1,5],
cephData[cephData$H == H & cephData$magVal=="Max",][1,6]
)
return (starData)
}
getStarData(cephData,1492)
?round
shiny::runApp()
rawCeph <- read.csv("cepheids.csv")
cleanCeph <- gather(rawCeph,magVal,appMag,Min:Max)
processCephData(cleanCeph,input$smcDist)
cephData<-processCephData(cleanCeph,200)
absMag <- function(appMag,distObj=10*parsec) {
return (round(appMag-5*(log10(distObj/parsec)-1)), digits=1)
}
appMag <- function(absMag,distObj=10*parsec) {
return (round(absMag+5*(log10(distObj/parsec)-1)), digits=1)
}
cephData<-processCephData(cleanCeph,200)
absMag <- function(appMag,distObj=10*parsec) {
return (round((appMag-5*(log10(distObj/parsec)-1))),1)
}
appMag <- function(absMag,distObj=10*parsec) {
return (round((absMag+5*(log10(distObj/parsec)-1))),1)
}
cephData<-processCephData(cleanCeph,200)
absMag <- function(appMag,distObj=10*parsec) {
absMag <-appMag-5*(log10(distObj/parsec)-1)
return (round(absMag,1))
}
appMag <- function(absMag,distObj=10*parsec) {
appMag <-absMag+5*(log10(distObj/parsec)-1)
return (round(appMag,1))
}
cephData<-processCephData(cleanCeph,200)
View(cephData)
shiny::runApp()
getStarData(cleanCeph,1492)
?is.na
tmp<-getStarData(cleanCeph,1492)
anyNA(tmp)
tmp<-getStarData(cleanCeph,1425)
tmp
tmp<-getStarData(cleanCeph,1)
tmp
anyNA(tmp)
shiny::runApp()
View(cleanCeph)
?paste
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
q()
